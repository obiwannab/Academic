<?php
// These are functions for validating user data
$errors = array();  // associative array to store any errors generated by validations...

// Format the database field names to pretty text for display in error messages...
function fieldname_as_text($fieldname) {
	$value = str_replace("_", " ", $fieldname);
	$value = ucfirst($value);
	return $value;
}

// Is the data Present? (Did the user submit anything?)
function has_presence($value) {
	return isset($value) && $value !== "";
}

// This function will loop through an array of fields and check that form data is present for all required fields
// Requires an array to loop through
function validate_fields($required_fields) {
	global $errors;
	foreach($required_fields as $field) {
		$value = trim($_POST[$field]);
		if (!has_presence($value)) {
			$errors[$field] = fieldname_as_text($field) . " cannot be blank";
		}
	}
}

// Is the data between the specified lengths?
// Requires a string with optional minimum and maximum length values (both options will default to null if not specified)
// Returns a boolean value: if the data is at least the minimum and no more than the maximum in length, return true
function has_length_between($value, $min = null, $max = null) {
	if ($min === null && $max === null) {   // no limits passed into the function
		return true;
	} elseif ($min !== null && $max === null) {   // only one value (minimum) passed into the function
		return strlen($value) >= $min;
	} else {
		return strlen($value) >= $min && strlen($value) <= $max;
	}
}

// This function will loop through an associative array of field names and their maximum lengths and will
//   check the form data submitted for each field to make sure it is of proper length
// Requires an associative array of field names and their associated maximum lengths
function validate_lengths($fields_with_limit) {
	global $errors;
	foreach($fields_with_limit as $field => $max) {
		$value = trim($_POST[$field]);
		if (!has_length_between($value, 0, $max)) {
			$errors[$field] = fieldname_as_text($field) . " is too long";
		}
	}
}

//	display form errors back to the user		  
//function form_errors($errors) {
//	$output = "";
//	if (!empty($errors)) {   // check to see if the error array has messages in it
//		$output .= "<div class=\"error\">";   // !?!?!?! I don't understand the extra quotes in this line...
//		$output .= "Please fix the following errors:";
//		$output .= "<ul>";
//		foreach ($errors as $key => $error) {
//			$output .= "<li>{$error}</li>";
//		}
//		$output .= "</ul>";
//		$output .= "</div>";
//	}
//	return $output;
//}

?>